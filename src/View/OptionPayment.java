/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Controller.BillController;
import Controller.BillDetailController;
import Models.BillDetailModel;
import Models.BillModel;
import Models.Data.Bill;
import Models.Data.Drink;
import static View.CustomerRequest.drinks;
import java.awt.Color;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class OptionPayment extends javax.swing.JFrame {

    /**
     * Creates new form OptionPayment
     */
    private JButton tableButtonReferences;  // Chuyển sang màu xanh
   
    private String tableName;
 
    private TableManager settableManager;

    public static double totalPr;

    public OptionPayment() {
        initComponents();
        this.setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Thanh toán và tích điểm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Thanh toán và trừ điểm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Thanh toán thông thường");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Lựa chọn thanh toán");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jButton1)
                .addGap(26, 26, 26)
                .addComponent(jButton2)
                .addGap(33, 33, 33)
                .addComponent(jButton3)
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(197, 197, 197))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static boolean paywithoutScore;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        paywithoutScore = true;
        paywithScore = false;
        tableButtonReferences = CustomerRequest.tableButtonReference;
        if(drinks == null){
            JOptionPane.showMessageDialog(this, "Bàn chưa gọi đồ", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        String tblName = TableManager.tableFoodName;
        BillModel _billModel = new BillModel();
        BillController _billController = new BillController(_billModel);
        int idTable = _billController.getIdTable(tblName);
        int idStaff = 3;
        int idMemberShip = 1;
        
        // get currentDate
        LocalDate today = LocalDate.now();
        // Định dạng ngày thành chuỗi "yyyy-MM-dd"
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String formattedDate = today.format(formatter);
        

        double totalPrice = 0;
        
        for(int i = 0; i< drinks.size();i++){
            totalPrice += drinks.get(i).getPrice()*Orders.listQuantity.get(i);
        }
        totalPr = totalPrice;
        Bill bill = new Bill();
        bill.setIdTable(idTable);
        bill.setIdStaff(idStaff);
        bill.setIdMemberShip(idMemberShip);
        bill.setDate(formattedDate);
        bill.setTotalPrice(totalPrice);
        _billController.AddBill(bill);

        
        BillDetailModel _billDetailModel = new BillDetailModel();
        BillDetailController _billDetailController = new BillDetailController(_billDetailModel);
        int idBill = _billDetailController.getRecenBill();

        SearchMember member = new SearchMember();
        member.setVisible(true);
        
        List<Integer> quantity = Orders.listQuantity;
        if(_billDetailController.AddBillDetail(idBill, drinks, quantity)){
            
            
//            Payment.settableManager.changeColor(Payment.tableButtonReference, Color.WHITE);
//            TableManager.updateTableColor(TableManager.tableFoodName, Color.WHITE);

        } else {
            JOptionPane.showMessageDialog(this, "Thanh toán thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    public static boolean paywithScore;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        paywithScore = true;
        paywithoutScore = false;
        tableButtonReferences = CustomerRequest.tableButtonReference;
        if(drinks == null){
            JOptionPane.showMessageDialog(this, "Bàn chưa gọi đồ", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        String tblName = TableManager.tableFoodName;
        BillModel _billModel = new BillModel();
        BillController _billController = new BillController(_billModel);
        int idTable = _billController.getIdTable(tblName);
        int idStaff = 3;
        int idMemberShip = 1;
        
        // get currentDate
        LocalDate today = LocalDate.now();
        // Định dạng ngày thành chuỗi "yyyy-MM-dd"
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String formattedDate = today.format(formatter);
        

        double totalPrice = 0;
        
        for(int i = 0; i< drinks.size();i++){
            totalPrice += drinks.get(i).getPrice()*Orders.listQuantity.get(i);
        }
        totalPr = totalPrice;
        Bill bill = new Bill();
        bill.setIdTable(idTable);
        bill.setIdStaff(idStaff);
        bill.setIdMemberShip(idMemberShip);
        bill.setDate(formattedDate);
        bill.setTotalPrice(totalPrice);
        _billController.AddBill(bill);

        
        BillDetailModel _billDetailModel = new BillDetailModel();
        BillDetailController _billDetailController = new BillDetailController(_billDetailModel);
        int idBill = _billDetailController.getRecenBill();

        SearchMember member = new SearchMember();
        member.setVisible(true);
        
        List<Integer> quantity = Orders.listQuantity;
        if(_billDetailController.AddBillDetail(idBill, drinks, quantity)){
            
            
//            Payment.settableManager.changeColor(Payment.tableButtonReference, Color.WHITE);
//            TableManager.updateTableColor(TableManager.tableFoodName, Color.WHITE);

        } else {
            JOptionPane.showMessageDialog(this, "Thanh toán thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        tableButtonReferences = CustomerRequest.tableButtonReference;
        if(drinks == null){
            JOptionPane.showMessageDialog(this, "Bàn chưa gọi đồ", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
        String tblName = TableManager.tableFoodName;
        BillModel _billModel = new BillModel();
        BillController _billController = new BillController(_billModel);
        int idTable = _billController.getIdTable(tblName);
        int idStaff = 3;
        int idMemberShip = 1;
        
        // get currentDate
        LocalDate today = LocalDate.now();
        // Định dạng ngày thành chuỗi "yyyy-MM-dd"
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String formattedDate = today.format(formatter);
        

        double totalPrice = 0;
        
        for(int i = 0; i< drinks.size();i++){
            totalPrice += drinks.get(i).getPrice()*Orders.listQuantity.get(i);
        }
        
        Bill bill = new Bill();
        bill.setIdTable(idTable);
        bill.setIdStaff(idStaff);
        bill.setIdMemberShip(idMemberShip);
        bill.setDate(formattedDate);
        bill.setTotalPrice(totalPrice);
        _billController.AddBill(bill);

        
        BillDetailModel _billDetailModel = new BillDetailModel();
        BillDetailController _billDetailController = new BillDetailController(_billDetailModel);
        int idBill = _billDetailController.getRecenBill();


        
        List<Integer> quantity = Orders.listQuantity;
        if(_billDetailController.AddBillDetail(idBill, drinks, quantity)){
            
            JOptionPane.showMessageDialog(this, "Thanh toán thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//            settableManager.changeColor(tableButtonReferences, Color.WHITE);
//            TableManager.updateTableColor(TableManager.tableFoodName, Color.WHITE);

        } else {
            JOptionPane.showMessageDialog(this, "Thanh toán thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OptionPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OptionPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OptionPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OptionPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OptionPayment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
